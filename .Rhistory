for (i in 1:length(i12_)) {
yr_pn <- c(yr_pn, list(which(P$yr == yr12[i])))
}
names(yr_pn) <- yr12
## plot of tree rings and nearest input points
L_out <- L[[YRn[iii - 1]]]
L_in <- L[[YRn[iii]]]
np <- nstP(L_out, L_in)
plot(L[[1]], type = "l", col = "red")
lapply(L, lines)
segments(L_out[, 1], L_out[, 2], L_in[np, 1], L_in[np, 2], col = "blue")
## plot
rdst. <- c()
for (i in 2:(length(yr12) - 1)) {
rdst. <- c(rdst., list(rdst_MerginePlus(L, P, yr12[i])))
}
plot(0, type = "n", ylim = c(0, 1), xlim = c(-180, 180), main = paste(yr12[1], rev(yr12)[1], sep = "-"), xlab = "-180 to 180 degree",
ylab = "ratio of distance between tree rings")
for (i in 1:length(rdst.)) points(rdst.[[i]], col = i)
spl <- c()  #### fit Spline curve
for (ii in 1:length(rdst.)) {
(spline <- smooth.spline(rdst.[[ii]], spar = 2e-04))
xxx <- seq(-200, 200, 1)
lines(predict(spline, xxx), col = "red")
spl <- c(spl, list(spline))  #  store spline curve function in 'spl'
}
names(spl) <- yr12[2:(length(yr12) - 1)]
## interpolation of tree rings ####
L2 <- c(L2, list(L_out))
for (jj in 1:length(spl)) {
spline <- spl[[jj]]
# plot(predict(spline,-180:180))
dL <- L_out - L_in[np, ]  # difference of L_out and L_in
L.ave <- (L_out + L_in[np, ])/2  # average of 2 coordinates
deg_spl <- atan2(L.ave[, 2], L.ave[, 1])/degree  # center angle
ratio_ <- predict(spline, deg_spl)$y
L_cal <- L_in[np, ] + dL * ratio_
lines(L_cal, col = "red")
L2 <- c(L2, list(L_cal))
}
}
L2 <- c(L2, list(L[[length(YRn)]]))  #\tAdd innermost annual ring last
# <<< end of calculation for tree ring interpolation ####
names(L2) <- YR2  ##\tname each annual ring
plot(L[[1]], type = "l", col = "red")
lapply(L2, lines, col = "blue")
points(P$x, P$y, pch = ".", col = "red")
TR@L2 <- L2
return(TR)
}
#' Construct a object (TR) of classTreeRingShape
#' Construct a object (TR) of classTreeRingShape
#'
#'
#' Construct a object (TR) of classTreeRingShape
#'
#'
#'
#' @param P_filename   file name of shape file (P) for tree ring points  (without extention)
#' Construct a object (TR) of classTreeRingShape
#'
#'
#'
#' @param P_filename   file name of shape file (P) for tree ring points  (without extention)
#' @param L_filename   file name of shape file (L) for tree ring lines  (without extention)
#' @param L2_filename  file name of shape file (L2) for tree ring lines interpolated (without extention)
#' Construct a object (TR) of classTreeRingShape
#'
#'
#'
#' @param P_filename   file name of shape file (P) for tree ring points  (without extention)
#' @param L_filename   file name of shape file (L) for tree ring lines  (without extention)
#' @param L2_filename  file name of shape file (L2) for tree ring lines interpolated (without extention)
#' @param P_id.tag     column name of id in shape file (P), default is 'id'
#' @param P_ring.tag   column name of ring no.(ordinaly year,outermost=0) in shape file (L), default is 'ring'
#' Construct a object (TR) of classTreeRingShape
#'
#'
#'
#' @param P_filename   file name of shape file (P) for tree ring points  (without extention)
#' @param L_filename   file name of shape file (L) for tree ring lines  (without extention)
#' @param L2_filename  file name of shape file (L2) for tree ring lines interpolated (without extention)
#' @param P_id.tag     column name of id in shape file (P), default is 'id'
#' @param P_ring.tag   column name of ring no.(ordinaly year,outermost=0) in shape file (L), default is 'ring'
#' @param L_ring.tag   column name of ring no.(ordinaly year,outermost=0) in shape file (L), default is 'ring'
#' @return generated new object from classTreeRingShape
#'
#'
#' @param P_filename   file name of shape file (P) for tree ring points  (without extention)
#' @param L_filename   file name of shape file (L) for tree ring lines  (without extention)
#' @param L2_filename  file name of shape file (L2) for tree ring lines interpolated (without extention)
#' @param P_id.tag     column name of id in shape file (P), default is 'id'
#' @param P_ring.tag   column name of ring no.(ordinaly year,outermost=0) in shape file (L), default is 'ring'
#' @param L_ring.tag   column name of ring no.(ordinaly year,outermost=0) in shape file (L), default is 'ring'
#' @return generated new object from classTreeRingShape
#' @export
#'
#' @examples
\dontrun{
# sample data enable to download from
# https://www.sanchikanri.com/treering/Abies_277_h400.zip
# sample data enable to download from
# https://www.sanchikanri.com/treering/Abies_277_h400.zip
setwd('../Abies_277_h400') #set working directory with shape files
TR.<-TreeRingShape(
P_filename='Abies_277_h400_TreeRing_Points.shp',
L_filename='Abies_277_h400_TreeRing_Representative.shp',
L2_filename='Abies_277_h400_TreeRing.shp',
P_id.tag='id',P_ring.tag='ring',
L_ring.tag='ring')
TR.
slotNames(TR.)
str(TR.)
Lplot(TR.@L2)
methods::setClass("classTreeRingShape",
slots = c(P_filename = "character",
P_id.tag = "character",
P_ring.tag = "character",
P = "data.frame",
P00 = "numeric",
n_id = "numeric",
YR_P = "numeric",
L_filename = "character",
L_ring.tag = "character",
L = "list",
L_ = "data.frame",
YR_L = "numeric",
ln = "numeric",
L2_filename = "character",
L2 = "list",
n_YR = "numeric")
)
slotNames(TR)
str(TR)
# Plot the tree ring shape data
Lplot(TR@L)
#' It's intended to demonstrate the structure and use of `TreeRingShape` class objects within the package.
#'
#' @name TR
#' @export
#' @examples
#' # Access basic information about the TreeRingShape object
#' slotNames(TR)
#' str(TR)
#' # Plot the tree ring shape data
#' Lplot(TR@L)
"TR"
#' P_ring.tag='ring',
#' L_ring.tag='ring')
#'
#'  TR.
#'  slotNames(TR.)
#'  str(TR.)
#'
#' }
#'
#'
new_classTreeRingShape <- function(P_filename, L_filename, L2_filename,
P_id.tag = "id", P_ring.tag = "ring", L_ring.tag = "ring") {
# generate new TR object from classTreeRingShape
TR <- new("classTreeRingShape")  # treering_cls #str(TR)
# tree ring points
TR@P_filename <- P_filename  #'ex : points277_h400'
TR@P_id.tag <- "id"
TR@P_ring.tag <- "ring"
#TR <- TreeRingsPoints(TR)
# representative tree ring lines
TR@L_filename <- L_filename  # 'ex : line277_h400'
TR@L_ring.tag <- L_ring.tag
#TR <- TreeRingsLines(TR)
# representative + interpolated tree ring lines
TR@L2_filename <- L2_filename  #
#TR <- TreeRingsInterpolation(TR)
return(TR)
}
(wd. <- getwd())
setwd('../Abies_277_h400')
dir()
TR.<-InitialSettings_classTreeRingShape(
P_filename='Abies_277_h400_TreeRing_Points.shp',
L_filename='Abies_277_h400_TreeRing_Representative.shp',
L2_filename='Abies_277_h400_TreeRing.shp',
P_id.tag='id',
P_ring.tag='ring',
L_ring.tag='ring')
TR.<-new_classTreeRingShape(
P_filename='Abies_277_h400_TreeRing_Points.shp',
L_filename='Abies_277_h400_TreeRing_Representative.shp',
L2_filename='Abies_277_h400_TreeRing.shp',
P_id.tag='id',
P_ring.tag='ring',
L_ring.tag='ring')
TR.
slotNames(TR.)
str(TR.)
}
#' P_ring.tag='ring',
#' L_ring.tag='ring')
#'
#'  TR.
#'  slotNames(TR.)
#'  str(TR.)
#'
#' }
#'
#'
new_classTreeRingShape <- function(P_filename, L_filename, L2_filename,
P_id.tag = "id", P_ring.tag = "ring", L_ring.tag = "ring") {
# generate new TR object from classTreeRingShape
TR <- new("classTreeRingShape")  # treering_cls #str(TR)
# tree ring points
TR@P_filename <- P_filename  #'ex : points277_h400'
TR@P_id.tag <- "id"
TR@P_ring.tag <- "ring"
#TR <- TreeRingsPoints(TR)
# representative tree ring lines
TR@L_filename <- L_filename  # 'ex : line277_h400'
TR@L_ring.tag <- L_ring.tag
#TR <- TreeRingsLines(TR)
# representative + interpolated tree ring lines
TR@L2_filename <- L2_filename  #
#TR <- TreeRingsInterpolation(TR)
return(TR)
}
TreeRingsPoints(TR)
TreeRingsLines(TR)
slotNames(TR)
# help("classTreeRingShape-class",package="TreeRingShape")
TR <- TreeRingsInterpolation(TR)
ya <- plot_year_RingArea(TR@L2, 2018)$Year_TreeRingArea
plot(ya,type='b')
tri. <- TreeRingIndex(ya)
lines(tri.$spline,col='red',lw=2)
plot(tri.$idx,type='b')
abline(h=1,col='red')
TR.<-TreeRingShape(
P_filename='Abies_277_h400_TreeRing_Points.shp',
L_filename='Abies_277_h400_TreeRing_Representative.shp',
L2_filename='Abies_277_h400_TreeRing.shp',
P_id.tag='id',P_ring.tag='ring',
L_ring.tag='ring')
WriteShapefile_TreeRings (TR@L2, tempfile("TreeRingShape_test",fileext = ".shp"))
dir(tempdir())
file.path <- '../Abies_277_h400/Abies_277_h400_TreeRing_Points.shp'
ReadShapefile_TreeRingPoints(file.path,id.tag='id',ring.tag='ring')
ReadShapefile_P00(filename)
filename <- '../Abies_277_h400/Abies_277_h400_TreeRing_Points.shp'
ReadShapefile_P00(filename)
filename <- '../Abies_277_h400/Abies_277_h400_TreeRing_Representative.shp'
Lplot(ReadShapefile_TreeRings(filename))
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
library(devtools)
library(testthat)
library(TreeRingShape)
help(package = "TreeRingShape")
## pdf manual ####
devtools::build_manual()
setwd("~/8T/Dropbox/00D/00/ring/TreeRingShape")
## pdf manual ####
devtools::build_manual()
## pdf manual ####
devtools::build_manual()
devtools::document()
devtools::document()
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
#devtools::install()
devtools::install(build_vignettes = TRUE)
library(devtools)
library(testthat)
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::check()
devtools::check()
devtools::check()
devtools::check()
#  errors ✔ | 0 warnings ✔ | 0 notes ✔
devtools::build_win()
devtools::check()
devtools::check()
devtools::check()
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
## pdf manual ####
devtools::build_manual()
# check ####
devtools::check()
devtools::document()
devtools::document()
## pdf manual ####
devtools::build_manual()
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
## pdf manual ####
devtools::build_manual()
devtools::document()
## pdf manual ####
devtools::build_manual()
devtools::document()
library(TreeRingShape)
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
library(devtools)
library(testthat)
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
help(package = "TreeRingShape")
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::build(binary = TRUE,
vignettes = TRUE,
manual = TRUE,)
help(package = "TreeRingShape")
library(TreeRingShape)
help(package = "TreeRingShape")
help(package = "TreeRingShape")
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
test_check("TreeRingShape")
#use_testthat ####
library(testthat)
usethis::use_testthat()
test_check("TreeRingShape")
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
# memory size ####
print(object.size(TR), units="Mb")
print(object.size(TR@L), units="Mb")
print(object.size(TR@L2), units="Mb")
print(object.size(TR@L_), units="Mb")
devtools::check_doc()
devtools::check_doc()
# check ####
devtools::check()
devtools::document()
#devtools::install()
devtools::install(build_vignettes = TRUE)
help(package = "TreeRingShape")
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
browseVignettes("TreeRingShape")
browseVignettes("TreeRingShape")
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install(build_vignettes = TRUE)
devtools::check_doc()
# check ####
devtools::check()
# check ####
devtools::check()
browseVignettes("TreeRingShape")
devtools::install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
devtools::build_manual()   ## pdf manual ####
library(devtools)
library(testthat)
library(TreeRingShape)
# check ####
devtools::check()
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install(build_vignettes = TRUE)
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
browseVignettes("TreeRingShape")
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# check ####
devtools::check()
# check ####
devtools::check()
devtools::build_manual()   ## pdf manual ####
# check ####
devtools::check()
# check ####
devtools::check()
# check ####
devtools::check()
# check ####
devtools::check()
# check ####
devtools::check()
# check ####
devtools::check()
devtools::build_manual()   ## pdf manual ####
# uninstall & install ####
.libPaths()
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall("TreeRingShape")
devtools::uninstall("TreeRingShape")
dir(.libPaths()[1],"TreeRingShape")
library(devtools)
devtools::uninstall("TreeRingShape")
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall("TreeRingShape")
library(TreeRingShape)
detach("package:TreeRingShape", unload = TRUE)
# uninstall & install ####
detach("package:TreeRingShape", unload = TRUE)
library(TreeRingShape)
# uninstall & install ####
detach("package:TreeRingShape", unload = TRUE)
.libPaths()
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall("TreeRingShape")
devtools::uninstall(pkg="TreeRingShape")
devtools::uninstall("TreeRingShape")
dir()
devtools::uninstall(TreeRingShape)
devtools::uninstall
library(devtools)
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall(pkg="TreeRingShape")
as.package()
.libPaths()
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall(pkg="TreeRingShape")
devtools::uninstall("TreeRingShape")
devtools::uninstall(".")
dir(.libPaths()[1],"TreeRingShape")
as.package()
install_github("ishidamgm/TreeRingShape")
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
# uninstall & install ####
detach("package:TreeRingShape", unload = TRUE)
.libPaths()
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall(".")
dir(.libPaths()[1],"TreeRingShape")
install_github("ishidamgm/TreeRingShape")
install.packages("~/8T/Dropbox/00D/00/ring/TreeRingShape_1.0.0.9000_R_x86_64-pc-linux-gnu.tar.gz", repos = NULL, type = "source")
library(TreeRingShape)
library(ForestTools)
browseVignettes("TreeRingShape")
TR
dir()
# uninstall & install ####
detach("package:TreeRingShape", unload = TRUE)
.libPaths()
dir(.libPaths()[1],"TreeRingShape")
devtools::uninstall(".")
dir(.libPaths()[1],"TreeRingShape")
devtools::install_github("ishidamgm/TreeRingShape")
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
