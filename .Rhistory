#　devtools::document　####
devtools::document()
#' P_id.tag='id',
#' P_ring.tag='ring',
#' L_ring.tag='ring')
#'
#'  TR_
#'  slotNames(TR_)
#'  str(TR_)
#'
#'
#'
new_classTreeRingShape <- function(P_filename, L_filename, L2_filename,
P_id.tag = "id", P_ring.tag = "ring", L_ring.tag = "ring") {
# generate new TR object from classTreeRingShape
TR <- new("classTreeRingShape")  # treering_cls #str(TR)
# tree ring points
TR@P_filename <- P_filename  #'ex : points277_h400'
TR@P_id.tag <- "id"
TR@P_ring.tag <- "ring"
#TR <- TreeRingsPoints(TR)
# representative tree ring lines
TR@L_filename <- L_filename  # 'ex : line277_h400'
TR@L_ring.tag <- L_ring.tag
#TR <- TreeRingsLines(TR)
# representative + interpolated tree ring lines
TR@L2_filename <- L2_filename  #
#TR <- TreeRingsInterpolation(TR)
return(TR)
}
#　devtools::document　####
devtools::document()
# check ####
devtools::check()
#' P_id.tag='id',
#' P_ring.tag='ring',
#' L_ring.tag='ring')
#'
#'  TR_
#'  slotNames(TR_)
#'  str(TR_)
#'
#'
#'
new_classTreeRingShape <- function(P_filename, L_filename, L2_filename,
P_id.tag = "id", P_ring.tag = "ring", L_ring.tag = "ring") {
# generate new TR object from classTreeRingShape
TR <- new("classTreeRingShape")  # treering_cls #str(TR)
# tree ring points
TR@P_filename <- P_filename  #'ex : points277_h400'
TR@P_id.tag <- "id"
TR@P_ring.tag <- "ring"
#TR <- TreeRingsPoints(TR)
# representative tree ring lines
TR@L_filename <- L_filename  # 'ex : line277_h400'
TR@L_ring.tag <- L_ring.tag
#TR <- TreeRingsLines(TR)
# representative + interpolated tree ring lines
TR@L2_filename <- L2_filename  #
#TR <- TreeRingsInterpolation(TR)
return(TR)
}
#' The full data set contains tree ring shape data for Abies_277_h400 sampled from Tateyama, central Japan.
#' Its disk image and shape files can be download from  https://www.sanchikanri.com/treering/Abies_277_h400.zip
#' It's intended to demonstrate the structure and use of `TreeRingShape` class objects within the package.
#'
#' @name TR_
#' @export
#' @examples
#' # Access basic information about the TreeRingShape object
#' slotNames(TR_)
#' str(TR_)
TR_<-new_classTreeRingShape(
P_filename='Abies_277_h400_TreeRing_Points.shp',
L_filename='Abies_277_h400_TreeRing_Representative.shp',
L2_filename='Abies_277_h400_TreeRing.shp',
P_id.tag='id',
P_ring.tag='ring',
L_ring.tag='ring')
TR_
new_classTreeRingShape
#　devtools::document　####
devtools::document()
library(devtools)
library(testthat)
library(TreeRingShape)
# check ####
devtools::check()
help(package = "TreeRingShape")
devtools::install_github("ishidamgm/TreeRingShape",vignettes = TRUE)
library(TreeRingShape)
devtools::build_vignettes()
devtools::build_rmd("vignettes/TreeRingShape.Rmd")
library(TreeRingShape)
help(package = "TreeRingShape")
# Authors@R: c(
#   person("Megumi", "ISHIDA", email = "ishidam@sanchikanri.com",
#          role = c("aut", "cph", "cre"),
#          comment = c(ORCID = "0000-0003-0978-5388")))
#devtools::install()
devtools::install(build_vignettes = TRUE)
browseVignettes("TreeRingShape")
## R CMD check --as-cran . ####
devtools::build_vignettes()
browseVignettes("TreeRingShape")
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
#　devtools::document　####
devtools::document()
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
# check ####
devtools::check()
# check ####
devtools::check()
library(TreeRingShape)
.dir <- system.file("shp",package = "TreeRingShape")
.file <- "Abies_277_h400_TreeRing_Representative.shp"
filename <- paste(.dir,.file,sep="/")
sf.L<-sf::st_read(filename)
plot(sf.L)
Lplot(ReadShapefile_TreeRings(filename))
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
.dir <- system.file("shp",package = "TreeRingShape")
.file <- "Abies_277_h400_TreeRing_Representative.shp"
filename <- paste(.dir,.file,sep="/")
sf.L<-sf::st_read(filename)
plot(sf.L)
.file <- "Abies_277_h400_TreeRing_Points.shp"
filename <- paste(.dir,.file,sep="/")
sf.P<-sf::st_read(filename)
sf.P
sf.P@CRS
z<-sf.P
z
str(z)
z$geometry
str(z$geometry)
attributes(z)
library(sf)
# crs2na.R
dir()
library(sf)
st_read("./inst/shp/Abies_277_h400_TreeRing_Representative.shp")
l<-st_read("./inst/shp/Abies_277_h400_TreeRing_Representative.shp")
plot(l)
CRS(l)
l
devtools::check()       #  errors ✔ | 0 warnings ✔ | 0 notes ✔
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
library(TreeRingShape)
TR@L2
TR <- TreeRingsInterpolation(TR)
TR@L2  ###  entered
ya <- plot_year_RingArea(TR@L2, 2018)$Year_TreeRingArea
# Figure of relationships year and tree ring area
plot(ya,type='b')
tri. <- TreeRingIndex(ya)
lines(tri.$spline,col='red',lw=2)
# Figure of relationships year and tree ring index
plot(tri.$idx,type='b')
abline(h=1,col='red')
#' @param nrow  par(mfrow=c(nrow,ncol))
#' @param ncol  par(mfrow=c(nrow,ncol))
#' @param ask  logical; if TRUE, the user is asked before each plot
#' @param ... other parameters to be passed through to plotting functions.
#'
#' @export
#'
#' @examples
#' Lplot2(TR@L,i.ring=1:9, nrow=1,ncol=1,type='b')
#' Lplot2(TR@L,type='b')
Lplot2 <- function(L, i.ring = 1:length(L), nrow = 3, ncol = 3, ask = "FALSE", ...) {
on.exit(par(oldpar))
par(mfrow = c(nrow, ncol))
for (i in i.ring) plot(L[[i]], main = paste(i, ":", names(L)[i], "yr"), ...)
}
Lplot2(TR@L,i.ring=1:9, nrow=1,ncol=1,type='b')
Lplot2(TR@L,type='b')
#' @param nrow  par(mfrow=c(nrow,ncol))
#' @param ncol  par(mfrow=c(nrow,ncol))
#' @param ask  logical; if TRUE, the user is asked before each plot
#' @param ... other parameters to be passed through to plotting functions.
#'
#' @export
#'
#' @examples
#' Lplot2(TR@L,i.ring=1:9, nrow=1,ncol=1,type='b')
#' Lplot2(TR@L,type='b')
Lplot2 <- function(L, i.ring = 1:length(L), nrow = 3, ncol = 3, ask = "FALSE", ...) {
on.exit(par(oldpar))
par(mfrow = c(nrow, ncol))
for (i in i.ring) plot(L[[i]], main = paste(i, ":", names(L)[i], "yr"), ...)
}
Lplot2(TR@L,type='b')
par(no.readonly = TRUE)
oldpar
oldpar
oldpar <- par(no.readonly = TRUE)
oldpar
#' @param nrow  par(mfrow=c(nrow,ncol))
#' @param ncol  par(mfrow=c(nrow,ncol))
#' @param ask  logical; if TRUE, the user is asked before each plot
#' @param ... other parameters to be passed through to plotting functions.
#'
#' @export
#'
#' @examples
#' Lplot2(TR@L,i.ring=1:9, nrow=1,ncol=1,type='b')
#' Lplot2(TR@L,type='b')
Lplot2 <- function(L, i.ring = 1:length(L), nrow = 3, ncol = 3, ask = "FALSE", ...) {
on.exit(par(oldpar))
par(mfrow = c(nrow, ncol))
for (i in i.ring) plot(L[[i]], main = paste(i, ":", names(L)[i], "yr"), ...)
}
Lplot2(TR@L,type='b')
Lplot2(TR@L,i.ring=1:9, nrow=1,ncol=1,type='b')
Lplot2(TR@L,type='b')
TR@L
TR@L
Lrn(TR@L,168)  # 168 is the formation year (from outermost) of the tree ring
# check ####
devtools::check()
# check ####
devtools::check()
# check ####
devtools::check()
# check ####
devtools::check()
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
# check ####
devtools::check()
library(TreeRingShape)
detach("package:TreeRingShape", unload = TRUE)
library(TreeRingShape)
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# check ####
devtools::check()
oldpar <- par(no.readonly = TRUE);   on.exit(par(oldpar))
#' @param i.ring integer vector, tree ring number for drawing
#'
#' @export
#' @return No return value, only draw tree ring plot.
#' @examples
#' slotNames(TR)
#' Lplot(TR@L)
#' str(TR@L)
#' Lrad.plot(TR@L,11:19)
#'
Lrad.plot <- function(L, i.ring = 1:9) {
par(mfrow = c(3, 3))
for (i in i.ring) {
x <- L[[i]][, 1]
y <- L[[i]][, 2]
rad <- atan2(y, x)
plot(rad, main = paste(i, ":", names(L)[i], "year"), ylim = c(-pi - 0.1, pi + 0.1))
abline(h = c(-pi, 0, pi), col = "red")
}
par(mfrow = c(1, 1))
}
slotNames(TR)
Lplot(TR@L)
str(TR@L)
Lrad.plot(TR@L,11:19)
Lrad.plot(TR@L,11:19)
Lrad.plot(TR@L,11:19)
#' @param i.ring integer vector, tree ring number for drawing
#'
#' @export
#' @return No return value, only draw tree ring plot.
#' @examples
#' slotNames(TR)
#' Lplot(TR@L)
#' str(TR@L)
#' Lrad.plot(TR@L,11:19)
#'
Lrad.plot <- function(L, i.ring = 1:9) {
par(mfrow = c(3, 3))
for (i in i.ring) {
x <- L[[i]][, 1]
y <- L[[i]][, 2]
rad <- atan2(y, x)
plot(rad, main = paste(i, ":", names(L)[i], "year"), ylim = c(-pi - 0.1, pi + 0.1))
abline(h = c(-pi, 0, pi), col = "red")
}
par(mfrow = c(1, 1))
}
Lrad.plot(TR@L,11:19)
#' @param i.ring integer vector, tree ring number for drawing
#'
#' @export
#' @return No return value, only draw tree ring plot.
#' @examples
#' slotNames(TR)
#' Lplot(TR@L)
#' str(TR@L)
#' Lrad.plot(TR@L,11:19)
#'
Lrad.plot <- function(L, i.ring = 1:4) {
par(mfrow = c(2, 2))
for (i in i.ring) {
x <- L[[i]][, 1]
y <- L[[i]][, 2]
rad <- atan2(y, x)
plot(rad, main = paste(i, ":", names(L)[i], "year"), ylim = c(-pi - 0.1, pi + 0.1))
abline(h = c(-pi, 0, pi), col = "red")
}
}
#' Draw a plot of tree rings
Lrad.plot(TR@L,11:19)
# check ####
devtools::check()
# check ####
devtools::check()
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
browseVignettes("TreeRingShape")
devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
#　devtools::document　####
devtools::document()
devtools::build_manual()   ## pdf manual ####
# build and install package with vignettes !!! ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
#devtools::install_github("ishidamgm/TreeRingShape", build_vignettes = TRUE,force=T)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
　devtools::submit_cran()
Selection: 1
TR
library(TreeRingShape)
help(package = "TreeRingShape")
setwd("~/8T/Dropbox/00D/00/ring/TreeRingShape/vignettes")
dir()
TR <- TreeRingsInterpolation(TR)
TR@L2  ###  entered
devtools::check()
devtools::document()
devtools::build_manual()   ## pdf manual ####
devtools::build(binary = TRUE,vignettes = TRUE,manual = TRUE)
devtools::install(build_vignettes = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
pkgbuild::build()
rcmdcheck::rcmdcheck()
# sudo R_LIBS_USER="/home/i/R/x86_64-pc-linux-gnu-library/4.3" R CMD check --as-cran TreeRingShape_3.0.2.tar.gz
file.show("../TreeRingShape.Rcheck/00check.log")
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
#
.libPaths()
library(TreeRingShape)
devtools::install_github("ishidamgm/TreeRingShape",vignettes = TRUE)
devtools::install_github("ishidamgm/TreeRingShape",build_vignettes = TRUE)
devtools::install_github("ishidamgm/TreeRingShape",build_vignettes = TRUE,force = TRUE)
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
install.packages("qpdf")
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
library(TreeRingShape)
help(package = "TreeRingShape")
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
pkgbuild::build()
rcmdcheck::rcmdcheck()
# cd ..
#  R CMD check --as-cran TreeRingShape_3.0.2.tar.gz
file.show("../TreeRingShape.Rcheck/00check.log")
# cd ..
#  R CMD check --as-cran TreeRingShape_3.0.2.tar.gz
file.show("../TreeRingShape.Rcheck/00check.log")
# cd ..
#  R CMD check --as-cran TreeRingShape_3.0.2.tar.gz
file.show("../TreeRingShape.Rcheck/00check.log")
devtools::check() # 0 errors ✔ | 0 warnings ✔ | 0 notes ✔
## R CMD check --as-cran . ####
file.show("..Rcheck/00check.log")
.libPaths();
sessionInfo()
devtools::submit_cran()
devtools::check() #0 errors ✔ | 0 warnings ✔ | 0 notes ✔
dir()
dir("~")
dir("~/Desktop")
read.csv("~/Desktop/t.txt")
read.csv("~/Desktop/t.txt",skip=1)
d<-read.csv("~/Desktop/t.txt",skip=1)
d[,3]
paste0("SHU-",d[,3])
調査地名=paste0("SHU-",d[,3])
緯度=d[,3]
経度=d[,5]
標高=d[,6]
data.frame(調査地名,緯度,経度,標高)
setwd("/home/i/8T/Dropbox/00D/地理情報/GPS/位山")
dir()
"
d<-read.csv("~/Desktop/森羅_岐阜大学2.CSV")
d<-read.csv("森羅_岐阜大学2.CSV")
d<-read.csv("森羅_岐阜大学2.CSV",fileEncoding = "shift-jis")
d
d[,c("名称","緯度","経度","標高")]
d1<-read.csv("森羅_岐阜大学1.CSV",fileEncoding = "shift-jis")
d1[,c("名称","緯度","経度","標高")]
d<-read.csv("森羅_岐阜大学2.CSV",fileEncoding = "shift-jis")
d[,c("名称","緯度","経度","標高")]
d2$緯度
d2<-read.csv("森羅_岐阜大学2.CSV",fileEncoding = "shift-jis")
d2[,c("名称","緯度","経度","標高")]
d2$緯度
d1$緯度
substr(d1$緯度,1,2)
paste0(substr(d1$緯度,1,2),"°",substr(d1$緯度,4,5),"′",substr(d1$緯度,6,7),"″")
lat=paste0(substr(d1$緯度,1,2),"°",substr(d1$緯度,4,5),"′",substr(d1$緯度,6,7),"″")
lon=paste0(substr(d1$経度,1,3),"°",substr(d1$経度,5,6),"′",substr(d1$経度,7,8),"″")
lat
lon
(d<-d1[,c("名称","緯度","経度","標高")])
調査地名=paste0("SHU-",d1$名称)
調査地名=paste0("SHU-",d1$名称)
d[,1]<-調査地名
d
data.frame(調査地名,緯度,経度,d1$標高,面積=400)
緯度
経度
d1$標高
d2<-read.csv("森羅_岐阜大学2.CSV",fileEncoding = "shift-jis")
length(d1)
nrow(d1)
nrow(d2)
data.frame(調査地名,緯度,経度,d1$標高)
調査地名
緯度
d2[,c("名称","緯度","経度","標高")]
data.frame(d1[,c("名称","緯度","経度","標高")],d2[,c("名称","緯度","経度","標高")])
data.frame(調査地名,緯度,経度,d1$標高,面積=400)
調査地名=paste0("SHU-",d1$名称)
緯度=paste0(substr(d1$緯度,1,2),"°",substr(d1$緯度,4,5),"′",substr(d1$緯度,6,7),"″")
経度=paste0(substr(d1$経度,1,3),"°",substr(d1$経度,5,6),"′",substr(d1$経度,7,8),"″")
data.frame(調査地名,緯度,経度,d1$標高,面積=400)
data.frame(調査地名,緯度,経度,d1$標高,面積(m*m)=400,緯度(°)=d2$緯度,経度(°)=d2$経度)
data.frame(調査地名,緯度,経度,d1$標高,面積(m*m)=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
d2$緯度
data.frame(調査地名,緯度,経度,d1$標高,面積(m*m)=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,d1$標高,面積(㎡)=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,d1$標高,面積㎡=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,d1$標高,面積m^2=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高=d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高=d1$標高,面積_m=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高=d1$標高,面積_m・m=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高=d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高(m)=d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高（）=d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高_m=d1$標高,面積=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
data.frame(調査地名,緯度,経度,標高_m=d1$標高,面積_mxm=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
dd<-data.frame(調査地名,緯度,経度,標高_m=d1$標高,面積_mxm=400,緯度_degree=d2$緯度,経度_degree=d2$経度)
write.csv(dd,file="森羅_岐阜大学位山演習林.csv")
#write.csv(dd,file="森羅_岐阜大学位山演習林.csv")
dir()
read.csv("森羅_岐阜大学.CSV")
read.csv("森羅_岐阜大学.CSV",fileEncoding = "shift-jis")
read.csv("森羅_岐阜大学位山演習林.csv",fileEncoding = "shift-jis")
read.csv("森羅_岐阜大学位山演習林.csv")
# check ####
devtools::check()
# check ####
devtools::check()
